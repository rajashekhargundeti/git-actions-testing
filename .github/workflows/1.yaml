name: j1

on: 
  # push: {}
  workflow_call: 
    outputs:
      my-output:
        description: "The first job output"
        value: ${{ jobs.build.outputs.VALUE_1 }}

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    outputs:
      VALUE_1: ${{ steps.test.outputs.VALUE_1 }}
    steps:
      # - name: step 0
      #   run: |
      #     echo {{ github.ref }}
      #     wget https://rajashekhargundeti.github.io/oci-secrets-store-csi-driver-provider/charts/index.yaml
      #     CHART_VERSION=`grep "^version: " charts/oci-secrets-store-csi-driver-provider/Chart.yaml | sed -e "s/version: //"`
      #     CHART_ENTRY=`yq -r ".entries.\"oci-secrets-store-csi-driver-provider\"[] | select ( .version == \"${CHART_VERSION}\")" index.yaml`
      #     if [ -z "$CHART_ENTRY" ];
      #     then
      #       echo "No chart entry found for published version: $CHART_VERSION"
      #       exit 1
      #     fi
      #     CHART_URL=`echo $CHART_ENTRY | jq -r '.urls[0]'`
      #     wget ${CHART_URL}
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.4.0

      - name: get nodes
        run: kubectl get nodes

      - name: deploy helm chart
        run: |
          helm repo add oci-provider https://rajashekhargundeti.github.io/oci-secrets-store-csi-driver-provider/charts
          helm install oci-provider oci-provider/oci-secrets-store-csi-driver-provider -n kube-system
          kubectl get daemonset -n kube-system \
          --selector='app.kubernetes.io/name in (oci-secrets-store-csi-driver-provider, secrets-store-csi-driver)'

      # - name: step 1
      #   id: test
      #   run: echo "VALUE_1=ghcr.io/oracle-samples/oci-secrets-store-csi-driver-provider:f3c216f5a54b42787cd6e98d40da559c9740b722" >> $GITHUB_OUTPUT
      # - name: helm
      #   run: |
      #     which helm
      #     helm version
      # - name: Log into GitHub Container Registry
      #   run:  echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${GITHUB_ACTOR,,} --password-stdin